@use "sass:math";

@mixin paper($padding: 1.5rem) {
  border-color: rgb(229 231 235);
  box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  border-radius: 0.5rem;
  border-width: 1px;
  border-style: solid;
  padding: $padding;
  background-color: white;
}

@function strip-unit($value) {
  @return math.div($value, ($value * 0 + 1));
}

//  https://www.smashingmagazine.com/2022/01/modern-fluid-typography-css-clamp/
// $min-vw: 320px; Minimum value should end at this viewport width
// $max-vw: 1200px; Maximum value should start at this viewport width
// $min-val: 16px;
// $max_val: 24px;
// $type: 'font-size' What css property should be fluid
// @include fluid-type(320px, 120px, 1rem, 5rem, 'font-size');
@mixin fluid-type($min-vw, $max-vw, $min-val, $max-val, $type) {
  $viewPortValue: math.div(
    100 * strip-unit($max-val - $min-val),
    strip-unit($max-vw - $min-vw)
  );

  $relativeValuePx: math.div(
    strip-unit($min-vw * $max-val) - strip-unit($max-vw * $min-val),
    strip-unit($min-vw - $max-vw)
  );

  $relativeValueRem: math.div($relativeValuePx, 16);

  $minValRem: #{strip-unit(math.div($min-val, 16))}rem;
  $maxValRem: #{strip-unit(math.div($max-val, 16))}rem;

  & {
    #{$type}: clamp(
      $minValRem,
      calc(#{$viewPortValue}vw + #{$relativeValueRem}rem),
      $maxValRem
    );
  }
}
